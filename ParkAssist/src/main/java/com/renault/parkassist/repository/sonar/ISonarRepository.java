/**
 * This is a generated file: do not modify.
 *
 * Generated by midl v2.1.0 from 'ParkAssist/vm-specification/repository/sonar-repository.ts'.
 *
 * Copyright (c) 2019 Renault SW Labs
 *
 * Developed by Renault SW Labs, an affiliate of RENAULT S.A.S. which holds all
 * intellectual property rights. Use of this software is subject to a specific
 * license granted by RENAULT S.A.S.
 */
package com.renault.parkassist.repository.sonar;

import androidx.annotation.FloatRange;
import androidx.annotation.IntRange;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.Size;
import androidx.lifecycle.LiveData;
import java.util.List;

/** Exposes sonar service as livedatas. */
public interface ISonarRepository {
	/** Indicate whether Ultrasonic Park Assist Rear feature is part of vehicle configuration. */
	boolean getUpaRearFeaturePresent();

	/** Indicate whether Ultrasonic Park Assist Front feature is part of vehicle configuration. */
	boolean getUpaFrontFeaturePresent();

	/** Indicate whether FlanK Protection feature is part of vehicle configuration. */
	boolean getFkpFeaturePresent();

	/** Indicate whether Ultrasonic Park Assist Visual Feedback feature is part of vehicle configuration. */
	boolean getUpaFkpVisualFeedbackFeaturePresent();

	/** Indicate whether Rear Cross Traffic Alert feature is part of vehicle configuration. */
	boolean getRctaFeaturePresent();

	/** Indicate whether Rear Automotive Emergency Breaking feature is part of vehicle configuration. */
	boolean getRaebFeaturePresent();

	/**
	 * Indicate whether Ultrasonic Park Assist Visual Settings feature is part of vehicle configuration.
	 * If true, 'rear' sonar can be (de)activated in the settings.
	 * Else, 'rear' sonar activation cannot be change by the user
	 */
	boolean getRearUpaActivationSettingPresent();

	/** Current surround view displayed screen. */
	@NonNull
	LiveData<Integer> getDisplayRequest();

	/** UPA view requested by the service. */
	@NonNull
	LiveData<Integer> getUpaDisplayRequest();

	/** FKP view requested by the service. */
	@NonNull
	LiveData<Integer> getFkpDisplayRequest();

	/** Obstacle detection. */
	@NonNull
	LiveData<Boolean> getObstacle();

	/** Collision alert enabled. */
	@NonNull
	LiveData<Boolean> getCollisionAlertEnabled();

	/** Collision alert side. */
	@NonNull
	LiveData<Integer> getCollisionAlertSide();

	/** Collision alert level. */
	@NonNull
	LiveData<Integer> getCollisionAlertLevel();

	/** Rear Auto Emergency Break alert enabled. */
	@NonNull
	LiveData<Boolean> getRaebAlertEnabled();

	/** Rear Auto Emergency Break alert level. */
	@NonNull
	LiveData<Integer> getRaebAlertState();

	/** Close display allowed. */
	@NonNull
	LiveData<Boolean> getCloseAllowed();

	/** Front sensor group */
	@NonNull
	LiveData<Integer> getFrontState();

	/** Rear sensor group */
	@NonNull
	LiveData<Integer> getRearState();

	/** Flank sensor group */
	@NonNull
	LiveData<Integer> getFlankState();

	/** Front left sensor */
	@NonNull
	LiveData<SensorState> getFrontLeft();

	/** Front center sensor */
	@NonNull
	LiveData<SensorState> getFrontCenter();

	/** Front right sensor */
	@NonNull
	LiveData<SensorState> getFrontRight();

	/** Rear left sensor */
	@NonNull
	LiveData<SensorState> getRearLeft();

	/** Rear center sensor */
	@NonNull
	LiveData<SensorState> getRearCenter();

	/** Rear right sensor */
	@NonNull
	LiveData<SensorState> getRearRight();

	/** Left front sensor */
	@NonNull
	LiveData<SensorState> getLeftFront();

	/** Left front-center sensor */
	@NonNull
	LiveData<SensorState> getLeftFrontCenter();

	/** Left rear-center sensor */
	@NonNull
	LiveData<SensorState> getLeftRearCenter();

	/** Left rear sensor */
	@NonNull
	LiveData<SensorState> getLeftRear();

	/** Right front sensor */
	@NonNull
	LiveData<SensorState> getRightFront();

	/** Right front-center sensor */
	@NonNull
	LiveData<SensorState> getRightFrontCenter();

	/** Right rear-center sensor */
	@NonNull
	LiveData<SensorState> getRightRearCenter();

	/** Right rear sensor */
	@NonNull
	LiveData<SensorState> getRightRear();

	/**
	 * Enable Collision Alert.
	 *
	 * @param enable if true enable alert, disable it else.
	 */
	public void enableCollisionAlert(boolean enable);

	/**
	 * Enable Rear Auto Emergency Break.
	 *
	 * @param enable if true enable RAEB, disable it else.
	 */
	public void enableRearAutoEmergencyBreak(boolean enable);

	/**
	 * Set sonar group.
	 *
	 * @param sonarGroupId identifier of the targeted sonar group
	 * @param enable if true enable the group, disable it else.
	 */
	public void setSonarGroup(
		int sonarGroupId,
		boolean enable
	);
}
