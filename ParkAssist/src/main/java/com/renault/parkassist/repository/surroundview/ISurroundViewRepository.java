/**
 * This is a generated file: do not modify.
 *
 * Generated by midl v2.1.0 from 'ParkAssist/vm-specification/repository/surround-view-repository.ts'.
 *
 * Copyright (c) 2019 Renault SW Labs
 *
 * Developed by Renault SW Labs, an affiliate of RENAULT S.A.S. which holds all
 * intellectual property rights. Use of this software is subject to a specific
 * license granted by RENAULT S.A.S.
 */
package com.renault.parkassist.repository.surroundview;

import androidx.annotation.FloatRange;
import androidx.annotation.IntRange;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.Size;
import androidx.lifecycle.LiveData;
import java.util.List;

/** Exposes surround view service as livedatas. */
public interface ISurroundViewRepository {
	/**
	 * Hardware configuration as exposed by the service.
	 * Will be one of RVC, AVM or NONE.
	 */
	int getFeatureConfig();

	/** Current surround state. */
	@NonNull
	LiveData<SurroundState> getSurroundState();

	/** Authorized actions. */
	@NonNull
	LiveData<List<Integer>> getAuthorizedActions();

	/** Trailer presence. */
	@NonNull
	LiveData<Integer> getTrailerPresence();

	/** Trunk state. */
	@NonNull
	LiveData<Integer> getTrunkState();

	/** Warning state. */
	@NonNull
	LiveData<Integer> getWarningState();

	/** Error state. */
	@NonNull
	LiveData<Integer> getErrorState();

	/** Camera brightness setting. */
	@NonNull
	LiveData<Integer> getBrightness();

	/** Camera color setting. */
	@NonNull
	LiveData<Integer> getColor();

	/** Camera contrast setting. */
	@NonNull
	LiveData<Integer> getContrast();

	/** Auto-zoom feature activation setting. */
	@NonNull
	LiveData<Boolean> getAutoZoomRearViewActivation();

	/** Dynamic guidelines activation setting. */
	@NonNull
	LiveData<Boolean> getDynamicGuidelinesActivation();

	/** Static guidelines activation setting. */
	@NonNull
	LiveData<Boolean> getStaticGuidelinesActivation();

	/** Trailer guidelines activation setting. */
	@NonNull
	LiveData<Boolean> getTrailerGuidelinesActivation();

	/** Brightness adjustement feature availability */
	boolean getIsBrightnessSupported();

	/** Brightness adjustement minimum value */
	int getBrightnessMin();

	/** Brightness adjustement maximum value */
	int getBrightnessMax();

	/** Color adjustement feature availability */
	boolean getIsColorSupported();

	/** Color adjustement minimum value */
	int getColorMin();

	/** Color adjustement maximum value */
	int getColorMax();

	/** Contrast adjustement feature availability */
	boolean getIsContrastSupported();

	/** Contrast adjustement minimum value */
	int getContrastMin();

	/** Contrast adjustement maximum value */
	int getContrastMax();

	/** Auto-zoom feature availability */
	boolean getIsAutoZoomSupported();

	/** Dynamic guidelines feature availability */
	boolean getIsDynamicGuidelinesSupported();

	/** Static guidelines feature availability */
	boolean getIsStaticGuidelinesSupported();

	/** Trailer guidelines feature availability */
	boolean getIsTrailerGuidelinesSupported();

	/** 3D view feature availability */
	boolean getIs3DViewSupported();

	/** Panoramic view feature availability */
	boolean getIsPanoramicViewSupported();

	/** Trailer view feature availability */
	boolean getIsTrailerViewSupported();

	/** Is rear camera located on trunk door */
	boolean getIsCameraOnTrunk();

	/** Is regulation applicable */
	boolean getIsRegulationApplicable();

	/**
	 * Set display view status. Client shall indicate its current
	 * display status to the surround view component, client
	 * shall set display status to NO_DISPLAY to allow view
	 * state change.
	 *
	 * @param View Current client displayed view (as defined in the service ViewState IntDef).
	 */
	public void setStatus(@View int View);

	/**
	 * User action request to switch to another view
	 *
	 * @param action Requested user action (as defined in the service Action IntDef).
	 */
	public void request(@Action int action);

	/**
	 * Acknowledge a warning state. Client can provide confirmations to certain requests/states.
	 * This is the case for clearing AVM warning messages or for RVC/HFP features.
	 * Clients should acknowledge AVM warning states (as defined in the service UserAcknowledgement StateListener#onWarningStateChange).
	 *
	 * @param userAck Client user acknowledgement (as defined in the service UserAcknowledgement IntDef).
	 */
	public void acknowledgeWarning(@UserAcknowledgement int userAck);

	/**
	 * Notify surround view service about the current surface view location and
	 * size in the screen in pixels. The origin of the system coordinates is the top
	 * left of the screen.
	 *
	 * @param x0 Position of the bottom left corner of the camera view along x axis in pixels.
	 * Value range is from 0 to screen width - 1.
	 * @param y0 Position of the bottom left corner of the camera view along y axis in pixels.
	 * Value range is from 0 to screen width - 1.
	 * @param x1 Position of the top right corner of the camera view along x axis in pixels.
	 * Value range is from 0 to screen height - 1.
	 * @param y1 Position of the top right corner of the camera view along y axis in pixels.
	 * Value range is from 0 to screen height - 1.
	 */
	public void setCameraPosition(
		int x0,
		int y0,
		int x1,
		int y1
	);

	/**
	 * Notify surround view service about the screen press position in the screen in
	 * pixels. The origin of the system coordinates in the top left of the screen.
	 * Only available on 3D screen.
	 *
	 * @param finger Finger touch identifier for multi-touch
	 * @param x Touch screen press position along x axis in pixels (sub-pixel precision supported).
	 * Value range is from 0.0 to screen width - 1.0.
	 * @param y Touch screen press position along y axis in pixels (sub-pixel precision supported).
	 * Value range is from 0.0 to screen height - 1.0.
	 */
	public void screenPress(
		int finger,
		float x,
		float y
	);

	/**
	 * Notify surround view service about screen press release. Only available on 3D
	 * screen.
	 *
	 * @param finger Finger touch identifier for multi-touch
	 * (as defined in the service FingerTouch IntDef).
	 */
	public void screenRelease(int finger);

	/**
	 * Set color setting value.
	 *
	 * @param value Color setting value to set.
	 */
	public void setColor(int value);

	/**
	 * Set brightness setting value.
	 *
	 * @param value Brightness setting value to set.
	 */
	public void setBrightness(int value);

	/**
	 * Set contrast setting value. Note: if not supported, the listener
	 * callback is not called.
	 *
	 * @param value Contrast setting value to set.
	 */
	public void setContrast(int value);

	/**
	 * Set Auto Zoom Rear View Activation setting.
	 *
	 * @param value Set to true to activate auto zoom rear view configuration, false otherwise.
	 */
	public void setAutoZoomRearViewActivation(boolean value);

	/**
	 * Set static guidelines activation setting.
	 *
	 * @param value Set to true to activate static guidelines, false otherwise.
	 */
	public void setStaticGuidelinesActivation(boolean value);

	/**
	 * Set dynamic guidelines activation setting.
	 *
	 * @param value Set to true to activate dynamic guidelines, false otherwise.
	 */
	public void setDynamicGuidelinesActivation(boolean value);

	/**
	 * Set trailer guidelines activation setting.
	 *
	 * @param value Set to true to activate trailer guideline, false otherwise.
	 */
	public void setTrailerGuidelinesActivation(boolean value);
}
