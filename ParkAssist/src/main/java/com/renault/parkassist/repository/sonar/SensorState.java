/**
 * This is a generated file: do not modify.
 *
 * Generated by midl v2.1.0.
 *
 * Copyright (c) 2019 Renault SW Labs
 *
 * Developed by Renault SW Labs, an affiliate of RENAULT S.A.S. which holds all
 * intellectual property rights. Use of this software is subject to a specific
 * license granted by RENAULT S.A.S.
 */
package com.renault.parkassist.repository.sonar;

import androidx.annotation.FloatRange;
import androidx.annotation.IntRange;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.Size;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/** Sonar sensor state */
public class SensorState {
	private boolean isHwSupported;
	private boolean isHatched;
	private boolean isScanned;
	private int level;

	/**
	 * @param isHwSupported
	 * @param isHatched
	 * @param isScanned
	 * @param level
	 */
	public SensorState(
		boolean isHwSupported,
		boolean isHatched,
		boolean isScanned,
		int level
	) {
		this.isHwSupported = isHwSupported;
		this.isHatched = isHatched;
		this.isScanned = isScanned;
		this.level = level;
	}

	/**
	 * @param isHwSupported
	 * @param isHatched
	 * @param isScanned
	 */
	public SensorState(
		boolean isHwSupported,
		boolean isHatched,
		boolean isScanned
	) {
		this(isHwSupported, isHatched, isScanned, 0);
	}

	/**
	 * @param isHwSupported
	 * @param isHatched
	 */
	public SensorState(
		boolean isHwSupported,
		boolean isHatched
	) {
		this(isHwSupported, isHatched, false, 0);
	}

	/** @param isHwSupported */
	public SensorState(boolean isHwSupported) {
		this(isHwSupported, false, false, 0);
	}

	/** Constructs an instance with each member initialized to its default value */
	public SensorState() {
		this(false, false, false, 0);
	}

	public final boolean getIsHwSupported() {
		return this.isHwSupported;
	}

	public final boolean getIsHatched() {
		return this.isHatched;
	}

	public final boolean getIsScanned() {
		return this.isScanned;
	}

	public final int getLevel() {
		return this.level;
	}

	@Override
	@NonNull
	public String toString() {
		return "SensorState(" +
			"isHwSupported=" + this.isHwSupported + ", " +
			"isHatched=" + this.isHatched + ", " +
			"isScanned=" + this.isScanned + ", " +
			"level=" + this.level + ")";
	}

	@Override
	public int hashCode() {
		return Objects.hash(
			this.isHwSupported,
			this.isHatched,
			this.isScanned,
			this.level);
	}

	@Override
	public boolean equals(@Nullable Object obj) {
		if (this == obj) {
			return true;
		} else {
			if (obj instanceof SensorState) {
				SensorState other = (SensorState) obj;
				return
					Objects.equals(this.isHwSupported, other.isHwSupported) &&
					Objects.equals(this.isHatched, other.isHatched) &&
					Objects.equals(this.isScanned, other.isScanned) &&
					Objects.equals(this.level, other.level);
			}
			return false;
		}
	}
}

