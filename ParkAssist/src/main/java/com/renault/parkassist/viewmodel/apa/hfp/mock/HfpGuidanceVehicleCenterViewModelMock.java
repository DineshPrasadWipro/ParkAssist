/**
 * This is a generated file: do not modify.
 *
 * Generated by midl v2.1.0 from 'ParkAssist/vm-specification/hfp-guidance-vehicle-center.ts'.
 *
 * Copyright (c) 2019 Renault SW Labs
 *
 * Developed by Renault SW Labs, an affiliate of RENAULT S.A.S. which holds all
 * intellectual property rights. Use of this software is subject to a specific
 * license granted by RENAULT S.A.S.
 */
package com.renault.parkassist.viewmodel.apa.hfp.mock;


import android.app.Application;
import androidx.annotation.FloatRange;
import androidx.annotation.IntRange;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.Size;
import androidx.lifecycle.MutableLiveData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.renault.parkassist.viewmodel.apa.hfp.HfpGuidanceVehicleCenterViewModelBase;

public class HfpGuidanceVehicleCenterViewModelMock extends HfpGuidanceVehicleCenterViewModelBase {
	public HfpGuidanceVehicleCenterViewModelMock(@NonNull Application application) {
		super(application);
		this.reset();
	}

	public void reset() {
		arrowStraightUpVisible.setValue(false);
		arrowCurveUpVisible.setValue(false);
		engageFrontActiveVisible.setValue(false);
		engageFrontNotActiveVisible.setValue(false);
		rightCurveFrontActiveVisible.setValue(false);
		rightCurveFrontNotActiveVisible.setValue(false);
		leftCurveFrontActiveVisible.setValue(false);
		leftCurveFrontNotActiveVisible.setValue(false);
		arrowStraightDownVisible.setValue(false);
		arrowCurveDownVisible.setValue(false);
		engageBackActiveVisible.setValue(false);
		engageBackNotActiveVisible.setValue(false);
		rightCurveBackActiveVisible.setValue(false);
		rightCurveBackNotActiveVisible.setValue(false);
		leftCurveBackActiveVisible.setValue(false);
		leftCurveBackNotActiveVisible.setValue(false);
		leftDoubleCurveVisible.setValue(false);
		rightDoubleCurveVisible.setValue(false);
		stopVisible.setValue(false);
	}

	public void postReset() {
		arrowStraightUpVisible.postValue(false);
		arrowCurveUpVisible.postValue(false);
		engageFrontActiveVisible.postValue(false);
		engageFrontNotActiveVisible.postValue(false);
		rightCurveFrontActiveVisible.postValue(false);
		rightCurveFrontNotActiveVisible.postValue(false);
		leftCurveFrontActiveVisible.postValue(false);
		leftCurveFrontNotActiveVisible.postValue(false);
		arrowStraightDownVisible.postValue(false);
		arrowCurveDownVisible.postValue(false);
		engageBackActiveVisible.postValue(false);
		engageBackNotActiveVisible.postValue(false);
		rightCurveBackActiveVisible.postValue(false);
		rightCurveBackNotActiveVisible.postValue(false);
		leftCurveBackActiveVisible.postValue(false);
		leftCurveBackNotActiveVisible.postValue(false);
		leftDoubleCurveVisible.postValue(false);
		rightDoubleCurveVisible.postValue(false);
		stopVisible.postValue(false);
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getArrowStraightUpVisible() {
		return arrowStraightUpVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getArrowCurveUpVisible() {
		return arrowCurveUpVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getEngageFrontActiveVisible() {
		return engageFrontActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getEngageFrontNotActiveVisible() {
		return engageFrontNotActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getRightCurveFrontActiveVisible() {
		return rightCurveFrontActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getRightCurveFrontNotActiveVisible() {
		return rightCurveFrontNotActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getLeftCurveFrontActiveVisible() {
		return leftCurveFrontActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getLeftCurveFrontNotActiveVisible() {
		return leftCurveFrontNotActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getArrowStraightDownVisible() {
		return arrowStraightDownVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getArrowCurveDownVisible() {
		return arrowCurveDownVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getEngageBackActiveVisible() {
		return engageBackActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getEngageBackNotActiveVisible() {
		return engageBackNotActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getRightCurveBackActiveVisible() {
		return rightCurveBackActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getRightCurveBackNotActiveVisible() {
		return rightCurveBackNotActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getLeftCurveBackActiveVisible() {
		return leftCurveBackActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getLeftCurveBackNotActiveVisible() {
		return leftCurveBackNotActiveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getLeftDoubleCurveVisible() {
		return leftDoubleCurveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getRightDoubleCurveVisible() {
		return rightDoubleCurveVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getStopVisible() {
		return stopVisible;
	}

	protected MutableLiveData<Boolean> arrowStraightUpVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> arrowCurveUpVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> engageFrontActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> engageFrontNotActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> rightCurveFrontActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> rightCurveFrontNotActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> leftCurveFrontActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> leftCurveFrontNotActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> arrowStraightDownVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> arrowCurveDownVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> engageBackActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> engageBackNotActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> rightCurveBackActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> rightCurveBackNotActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> leftCurveBackActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> leftCurveBackNotActiveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> leftDoubleCurveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> rightDoubleCurveVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> stopVisible = new MutableLiveData<>();

	


}
