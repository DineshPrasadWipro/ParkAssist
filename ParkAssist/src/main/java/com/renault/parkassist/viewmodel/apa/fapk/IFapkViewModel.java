/**
 * This is a generated file: do not modify.
 *
 * Generated by midl v2.1.0 from 'ParkAssist/vm-specification/fapk.ts'.
 *
 * Copyright (c) 2019 Renault SW Labs
 *
 * Developed by Renault SW Labs, an affiliate of RENAULT S.A.S. which holds all
 * intellectual property rights. Use of this software is subject to a specific
 * license granted by RENAULT S.A.S.
 */
package com.renault.parkassist.viewmodel.apa.fapk;

import androidx.annotation.FloatRange;
import androidx.annotation.IntRange;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.Size;
import androidx.lifecycle.LiveData;
import java.util.List;

/**
 * Handles full automatic park assist state.
 *
 * _Automatic Parking Assist  - Feature ID : _
 */
public interface IFapkViewModel {
	/** The instruction the user needs to follow as a resource id. */
	@NonNull
	LiveData<Integer> getInstruction();

	/** Current maneuver parallel button selection state */
	@NonNull
	LiveData<Boolean> getManeuverParallelButtonSelected();

	/** Current maneuver parallel button state */
	@NonNull
	LiveData<Boolean> getManeuverParallelButtonEnabled();

	/** Current maneuver perpendicular button selection state */
	@NonNull
	LiveData<Boolean> getManeuverPerpendicularButtonSelected();

	/** Current maneuver perpendicular button state */
	@NonNull
	LiveData<Boolean> getManeuverPerpendicularButtonEnabled();

	/** Current maneuver parkout button selection state */
	@NonNull
	LiveData<Boolean> getManeuverParkoutButtonSelected();

	/** Current maneuver parkout button button state */
	@NonNull
	LiveData<Boolean> getManeuverParkoutButtonEnabled();

	/** Current maneuver stop switch button visibility state */
	@NonNull
	LiveData<Boolean> getManeuverStopSwitchButtonVisible();

	/** Current maneuver start switch button visibility state */
	@NonNull
	LiveData<Boolean> getManeuverStartSwitchButtonVisible();

	/** Current maneuver start switch button enabled state */
	@NonNull
	LiveData<Boolean> getManeuverStartSwitchButtonEnabled();

	/** Current maneuver start switch button selection state */
	@NonNull
	LiveData<Boolean> getManeuverStartSwitchButtonSelected();

	/** Current maneuver stop switch button selection state */
	@NonNull
	LiveData<Boolean> getManeuverStopSwitchButtonSelected();

	/** Whether we display settings icon or not */
	@NonNull
	LiveData<Boolean> getSettingsVisible();

	/** Whether we display parallel button */
	boolean getManeuverParallelVisible();

	/** Whether we display perpendicular button */
	boolean getManeuverPerpendicularVisible();

	/** Whether we display parkout button */
	boolean getManeuverParkoutVisible();

	/** Start the maneuver if all conditions boolean met */
	public void maneuverStart();

	/** Stop the maneuver if all conditions boolean met */
	public void maneuverStop();

	/**
	 * Switch the maneuver mode.
	 *
	 * @param maneuverType
	 */
	public void setManeuver(int maneuverType);
}
