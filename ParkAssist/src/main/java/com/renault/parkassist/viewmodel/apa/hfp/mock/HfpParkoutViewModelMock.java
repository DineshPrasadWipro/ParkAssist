/**
 * This is a generated file: do not modify.
 *
 * Generated by midl v2.1.0 from 'ParkAssist/vm-specification/hfp-parkout.ts'.
 *
 * Copyright (c) 2019 Renault SW Labs
 *
 * Developed by Renault SW Labs, an affiliate of RENAULT S.A.S. which holds all
 * intellectual property rights. Use of this software is subject to a specific
 * license granted by RENAULT S.A.S.
 */
package com.renault.parkassist.viewmodel.apa.hfp.mock;


import android.app.Application;
import androidx.annotation.FloatRange;
import androidx.annotation.IntRange;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.Size;
import androidx.lifecycle.MutableLiveData;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.renault.parkassist.viewmodel.apa.hfp.HfpParkoutViewModelBase;

public class HfpParkoutViewModelMock extends HfpParkoutViewModelBase {
	public HfpParkoutViewModelMock(@NonNull Application application) {
		super(application);
		this.reset();
	}

	public void reset() {
		backgroundSidesVisible.setValue(false);
		backgroundParallelLeftVisible.setValue(false);
		parallelLeftVehicleCenterVisible.setValue(false);
		backgroundParallelRightVisible.setValue(false);
		parallelRightVehicleCenterVisible.setValue(false);
		parallelLeftVehicleLeftVisible.setValue(false);
		parallelRightVehicleRightVisible.setValue(false);
	}

	public void postReset() {
		backgroundSidesVisible.postValue(false);
		backgroundParallelLeftVisible.postValue(false);
		parallelLeftVehicleCenterVisible.postValue(false);
		backgroundParallelRightVisible.postValue(false);
		parallelRightVehicleCenterVisible.postValue(false);
		parallelLeftVehicleLeftVisible.postValue(false);
		parallelRightVehicleRightVisible.postValue(false);
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getBackgroundSidesVisible() {
		return backgroundSidesVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getBackgroundParallelLeftVisible() {
		return backgroundParallelLeftVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getParallelLeftVehicleCenterVisible() {
		return parallelLeftVehicleCenterVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getBackgroundParallelRightVisible() {
		return backgroundParallelRightVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getParallelRightVehicleCenterVisible() {
		return parallelRightVehicleCenterVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getParallelLeftVehicleLeftVisible() {
		return parallelLeftVehicleLeftVisible;
	}

	@NonNull
	@Override
	public MutableLiveData<Boolean> getParallelRightVehicleRightVisible() {
		return parallelRightVehicleRightVisible;
	}

	protected MutableLiveData<Boolean> backgroundSidesVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> backgroundParallelLeftVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> parallelLeftVehicleCenterVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> backgroundParallelRightVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> parallelRightVehicleCenterVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> parallelLeftVehicleLeftVisible = new MutableLiveData<>();
	protected MutableLiveData<Boolean> parallelRightVehicleRightVisible = new MutableLiveData<>();

	


}
