/**
 * This is a generated file: do not modify.
 *
 * Generated by midl v2.1.0 from 'ParkAssist/vm-specification/avm-state.ts'.
 *
 * Copyright (c) 2019 Renault SW Labs
 *
 * Developed by Renault SW Labs, an affiliate of RENAULT S.A.S. which holds all
 * intellectual property rights. Use of this software is subject to a specific
 * license granted by RENAULT S.A.S.
 */
package com.renault.parkassist.viewmodel.avm;

import androidx.annotation.FloatRange;
import androidx.annotation.IntRange;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.Size;
import androidx.lifecycle.LiveData;
import java.util.List;

/** Arround View Monitoring (AVM) video display current state */
public interface IAvmStateViewModel {
	/** Current display type button selected */
	@NonNull
	LiveData<Integer> getModeSelected();

	/** Close camera view action visible */
	@NonNull
	LiveData<Boolean> getCloseVisible();

	/** Easypark shortcut visible */
	boolean getEasyparkShortcutVisible();

	/** Activate maneuver view action visible */
	@NonNull
	LiveData<Boolean> getManeuverVisible();

	/** Activate settings view action visible */
	@NonNull
	LiveData<Boolean> getSettingsVisible();

	/** Activate trailer view action visible */
	@NonNull
	LiveData<Boolean> getTrailerVisible();

	/**
	 * Whether or not we should add camera horizontal margin in order
	 * to center it on screen for bird side view
	 */
	@NonNull
	LiveData<Boolean> getBirdSideCameraMargin();

	/** Select standard view action visible */
	@NonNull
	LiveData<Boolean> getSelectStandardViewVisible();

	/** Back button visibility */
	@NonNull
	LiveData<Boolean> getBackButtonVisible();

	/** Select panoramic view action visible */
	@NonNull
	LiveData<Boolean> getSelectPanoramicViewVisible();

	/** Select sides view action visible */
	@NonNull
	LiveData<Boolean> getSelectSidesViewVisible();

	/** Select three dimension view action visible */
	@NonNull
	LiveData<Boolean> getSelectThreeDimensionViewVisible();

	/** three dimension info text visible */
	@NonNull
	LiveData<Boolean> getThreeDimensionInfoVisible();

	/** Whether buttons are enabled or not */
	@NonNull
	LiveData<Boolean> getButtonsEnabled();

	/**
	 * Requests the AVM to display a specific view mode
	 *
	 * @param request AVM view mode request
	 */
	public void requestViewMode(@AvmModeRequest int request);

	/**
	 * This function is the entry point for Avm camera scenarios.
	 * It will decide what mode to set by default.
	 * To be called when lifecycle is attached to viewModels livedatas
	 */
	public void requestView();

	/**
	 * This function is the exit point for Avm camera scenarios.
	 * It will decide what how to properly leave Avm.
	 * To be called when lifecycle is detached to viewModels livedatas
	 */
	public void closeView();
}
